#################################################################################
#######  Loading the movie data and creating a movie/actors dictionary   ########
#################################################################################

# creating an empty dictionary with movies as key and a list of all participating 
# as respective values
movies_dict = {}
# opening the data movies.txt and looping through each line seperately 
with open("movies.txt") as file:
  for line in file:
    # removing all characters from the end and start of a string
    line = line.strip()
    # splitting each line into the actor name and all the movies he plays in
    movie_info = line.split(", ")
    # looping through the movie names of in each line (the loop starts from 1 to 
    # skip the actor name) and checking whether the movie is already a key in the 
    # movies dictionary. If yes, the  repsective actor is added to the movie key, 
    # if no, the movie is added as a new key to the moves.dict with the repective 
    # actor as value
    for i in range(1, len(movie_info)):
      if movie_info[i] in movies_dict.keys():
        movies_dict[movie_info[i]].add(movie_info[0])
      else:
        movies_dict[movie_info[i]]=set()
        movies_dict[movie_info[i]].add(movie_info[0])
  print(movies_dict)
  
  
# creting a list of all movies by looping through the movies_dict dictionary
movies_list = []
for movie, actors in movies_dict.items():
    movies_list.append(movie)
print(movies_list)

# creating a sinlge list of all unique actors by looping thorugh the movies_dict 
# dictionary
actors_list = []
for movie, actors in movies_dict.items():
    actors_list.append(actors)
actors_list = list(set([item for sublist in actors_list for item in sublist]))
print(actors_list)

#################################################################################
################  Function 1: Get the Actors from two Movies   ##################
#################################################################################

# defining a function that takes two movies and a mathematical specification 
# (Union, Intersection or Difference) as input and returns the respective actors
# of those two movies according to the selected specification
def function1(Movie_1, Movie_2, Choice):
  actors_1 = movies_dict[Movie_1]
  actors_2 = movies_dict[Movie_2]

  # gives actors that played in either of the movies and removes repetitions
  if Choice == "Union":
      all_list = [actors_1, actors_2]
      all_list = [item for sublist in all_list for item in sublist]
      union_list = sorted(list(set(all_list)))
      print("Actors who played in movies", '"', Movie_1,'"', "& ", '"',Movie_2,'"', "are:")
      print(*union_list, sep = "\n")
  # gives only actors who played in both of the movies chosen
  if Choice == "Intersection":
    intersection_list = actors_1.intersection(actors_2)
    intersection_list = sorted(list(set(intersection_list)))
    print("Actors who played in both", '"', Movie_1,'"', "& ", '"',Movie_2,'"', "are:")
    print(*intersection_list, sep = "\n")
  # Gives actors who played in either of the movies chosen but not in both movies
  if Choice == "Difference":
    difference_list = (actors_1.difference(actors_2), actors_2.difference(actors_1))
    difference_list = [item for sublist in difference_list for item in sublist]
    difference_list = sorted(list(set(difference_list)))
    print("Actors who played in", '"', Movie_1,'"', "but not in", '"',Movie_2,'"',"and vice versa", "are:")
    print(*difference_list, sep = "\n")

#################################################################################
################  Function 2: Get all Coactors from an Actor   ##################
#################################################################################

# defining a function that takes an actors name as input and prints all his 
# coactors from all the movies he has played in
def get_coactors(actor_name):
  # creating an empty lists for movies the actor played in and his coactors
  movies = []
  coactors = []
  # looping through each movie and the corresponding actors within the movie-
  # dictionary and adding all movies to the movies-list that the actor played in
  for movie, actors in movies_dict.items():
    if actor_name in actors:
      movies.append(movie)
  # looping through the movie-list and adding all participating actors as denoted 
  # in the movies-dictionary to the coactors-list
  coactors = [movies_dict[b] for b in movies]
  # reducing the coactors-list-of-lists to a simple list  
  coactors = [item for sublist in coactors for item in sublist]
  # removing all the dublicates in the coactors-list
  coactors = list(set(coactors))
  # removing the inputed actor from the coactor list
  coactors.remove(actor_name)
  # sorting the coactors by name
  coactors = sorted(coactors)
  # printing the inputed actor name, all the movies he played in (movies-list) 
  # and all his coactors from all his films (coactor-list)
  print(actor_name, "played in", movies, "with the following coactors:")
  print(*coactors, sep = "\n")
  
#################################################################################
################              User Menue and Main              ##################
#################################################################################
